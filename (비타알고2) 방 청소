#include<iostream>
#include<string.h>
#include<bits/stdc++.h>
typedef long long ll;

using namespace std;
int room[303][303];
int d[303][303];
int dx[] = { 0, 0, -1, 1 };
int dy[] = { -1, 1, 0, 0 };
ll n,cnt;

int go(int x, int y) {
	int& res = d[x][y];
	if (~res) return res;
	res = 1;
	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i], ny = y + dy[i];
		if (nx >= 0 && nx < n && ny >= 0 && ny < n && room[nx][ny] < room[x][y]) {
			res = max(d[x][y], go(nx,ny) + 1);
		}
	}
	return res;
}

int main() {
	memset(d, -1, sizeof(d));
	cin >> n;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			cin >> room[i][j];
	int ans = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			ans = max(ans, go(i, j));
		}
	}
	cout << ans;
}
